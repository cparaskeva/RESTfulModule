package eu.ubitech.broker.hibernate.models;
// Generated Jun 16, 2014 4:29:36 PM by Hibernate Tools 3.6.0


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="broker"
)
public class Product  implements java.io.Serializable {


     private int productId;
     private Manufacturer manufacturer;
     private ProductCode productCode;
     private BigDecimal purchaseCost;
     private Integer quantityOnHand;
     private BigDecimal markup;
     private String available;
     private String description;
     private Set<PurchaseOrder> purchaseOrders = new HashSet<PurchaseOrder>(0);

    public Product() {
    }

	
    public Product(int productId, Manufacturer manufacturer, ProductCode productCode) {
        this.productId = productId;
        this.manufacturer = manufacturer;
        this.productCode = productCode;
    }
    public Product(int productId, Manufacturer manufacturer, ProductCode productCode, BigDecimal purchaseCost, Integer quantityOnHand, BigDecimal markup, String available, String description, Set<PurchaseOrder> purchaseOrders) {
       this.productId = productId;
       this.manufacturer = manufacturer;
       this.productCode = productCode;
       this.purchaseCost = purchaseCost;
       this.quantityOnHand = quantityOnHand;
       this.markup = markup;
       this.available = available;
       this.description = description;
       this.purchaseOrders = purchaseOrders;
    }
   
     @Id 

    
    @Column(name="product_id", unique=true, nullable=false)
    public int getProductId() {
        return this.productId;
    }
    
    public void setProductId(int productId) {
        this.productId = productId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="manufacturer_id", nullable=false)
    public Manufacturer getManufacturer() {
        return this.manufacturer;
    }
    
    public void setManufacturer(Manufacturer manufacturer) {
        this.manufacturer = manufacturer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_code", nullable=false)
    public ProductCode getProductCode() {
        return this.productCode;
    }
    
    public void setProductCode(ProductCode productCode) {
        this.productCode = productCode;
    }

    
    @Column(name="purchase_cost", precision=12)
    public BigDecimal getPurchaseCost() {
        return this.purchaseCost;
    }
    
    public void setPurchaseCost(BigDecimal purchaseCost) {
        this.purchaseCost = purchaseCost;
    }

    
    @Column(name="quantity_on_hand")
    public Integer getQuantityOnHand() {
        return this.quantityOnHand;
    }
    
    public void setQuantityOnHand(Integer quantityOnHand) {
        this.quantityOnHand = quantityOnHand;
    }

    
    @Column(name="markup", precision=4)
    public BigDecimal getMarkup() {
        return this.markup;
    }
    
    public void setMarkup(BigDecimal markup) {
        this.markup = markup;
    }

    
    @Column(name="available", length=5)
    public String getAvailable() {
        return this.available;
    }
    
    public void setAvailable(String available) {
        this.available = available;
    }

    
    @Column(name="description", length=50)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<PurchaseOrder> getPurchaseOrders() {
        return this.purchaseOrders;
    }
    
    public void setPurchaseOrders(Set<PurchaseOrder> purchaseOrders) {
        this.purchaseOrders = purchaseOrders;
    }




}


